
from os import getenv
from os.path import isfile
import json

# The site.cfg file is used to configure a flask app.  Refer to the flask
# documentation for other configurations.  The below are used specifically by
# Chill.

# Set the HOST to 0.0.0.0 for being an externally visible server.
# Set the HOST to 127.0.0.1 for internal
HOST = getenv("CHILL_HOST", default="0.0.0.0")
PORT = int(getenv("CHILL_PORT", default="5000"))

# Optional if needing to freeze the site and absolute URLs are needed. See the
# FREEZER_BASE_URL setting below.
HOSTNAME = getenv("CHILL_HOSTNAME", default="localhost")

# Path to sqlite3 database file
CHILL_DATABASE_URI = getenv("CHILL_DATABASE_URI", default="db")

# Set the sqlite journal_mode
# https://sqlite.org/pragma.html#pragma_journal_mode
SQLITE_JOURNAL_MODE = getenv("CHILL_SQLITE_JOURNAL_MODE", default="wal")

# If using the ROOT_FOLDER then you will need to set the PUBLIC_URL_PREFIX to
# something other than '/'.
#PUBLIC_URL_PREFIX = getenv("CHILL_PUBLIC_URL_PREFIX", default="/")

# If setting the ROOT_FOLDER:
#PUBLIC_URL_PREFIX = getenv("CHILL_PUBLIC_URL_PREFIX", default="/site")

# The ROOT_FOLDER is used to send static files from the '/' route.  This will
# conflict with the default value for PUBLIC_URL_PREFIX. Any file or directory
# within the ROOT_FOLDER will be accessible from '/'.  The default is not
# having anything set.
#ROOT_FOLDER = getenv("CHILL_ROOT_FOLDER", default="root")

# The document folder is an optional way of storing content outside of the
# database.  It is used with the custom filter 'readfile' which can read the
# file from the document folder into the template.  If it is a Markdown file
# you can also use another filter to parse the markdown into HTML with the
# 'markdown' filter. For example:
# {{ 'llamas-are-cool.md'|readfile|markdown }}
#DOCUMENT_FOLDER = getenv("CHILL_DOCUMENT_FOLDER", default="documents")

# The media folder is used to send static files that are not related to the
# 'theme' of a site.  This usually includes images and videos that are better
# served from the file system instead of the database. The default is not
# having this set to anything.
#MEDIA_FOLDER = getenv("CHILL_MEDIA_FOLDER", default="media")

# The media path is where the files in the media folder will be accessible.  In
# templates you can use the custom variable: 'media_path' which will have this
# value.
# {{ media_path }}llama.jpg
# or:
# {{ url_for('send_media_file', filename='llama.jpg') }}
#MEDIA_PATH = getenv("CHILL_MEDIA_PATH", default="/media/")

# When creating a stand-alone static website the files in the MEDIA_FOLDER are
# only included if they are linked to from a page.  Set this to True if all the
# files in the media folder should be included in the FREEZER_DESTINATION.
#MEDIA_FREEZE_ALL = getenv("CHILL_MEDIA_FREEZE_ALL", default="False").lower() == "true"

# The theme is where all the front end resources like css, js, graphics and
# such that make up the theme of a website. The THEME_STATIC_FOLDER is where
# these files are located and by default nothing is set here.
#THEME_STATIC_FOLDER = getenv("CHILL_THEME_STATIC_FOLDER", default="static")

# Set a THEME_STATIC_PATH for routing the theme static files with.  It's useful
# to set a version number within this path to easily do cache-busting.  In your
# templates you can use the custom variable:
# {{ theme_static_path }}llama.css
# or:
# {{ url_for('send_theme_file', filename='llama.css') }}
# to get the url to a file in the theme static folder.

VERSION = "0"
PACKAGEJSON = {}
if isfile('package.json'):
    with open('package.json') as f:
        PACKAGEJSON = json.load(f)
        VERSION = PACKAGEJSON['version']
elif isfile('VERSION'):
    with open('VERSION') as f:
        VERSION = f.read().strip()

THEME_STATIC_PATH = getenv("CHILL_THEME_STATIC_PATH", default="/theme/{VERSION}/").format(**locals())

# Where the jinja2 templates for the site are located.  Will default to the app
# template_folder if not set.
THEME_TEMPLATE_FOLDER = getenv("CHILL_THEME_TEMPLATE_FOLDER", default="templates")

# Where all the custom SQL queries and such are located.  Chill uses a few
# built-in ones and they can be overridden by adding a file with the same name
# in here. To do much of anything with Chill you will need to add some custom
# SQL queries and such to load data into your templates.
#THEME_SQL_FOLDER = getenv("CHILL_THEME_SQL_FOLDER", default="queries")

# Helpful to have this set to True if you want to fix stuff.
#DEBUG = getenv("CHILL_DEBUG", default="False").lower() == "true"

# https://pythonhosted.org/Frozen-Flask/#configuration
# For creating a stand-alone static website that you can upload without
# requiring an app to run it. This will use Frozen-Flask.
# The path to the static/frozen website will be put.
#FREEZER_DESTINATION = getenv("CHILL_FREEZER_DESTINATION", default="frozen")
#FREEZER_BASE_URL = getenv("CHILL_FREEZER_BASE_URL", default="//{HOSTNAME}/").format(**locals())
